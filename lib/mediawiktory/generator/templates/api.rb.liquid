# frozen_string_literal: true

require_relative './client'
require_relative './actions/base'

module {{ namespace }}
  # The base API class for [{{ object.site.name }}]({{ object.site.base }}).
  #
  # Generated from {{ source }} at {{ friendly_date }} by MediaWiktory {{ version }}.
  #
  # See {MediaWiktory::Api} base class docs for generic usage examples, and this class' methods
  # list and descriptions for MediaWiki features available for this particular API.
  #
  class Api
    attr_reader :client

    # @param url [String] Source URL for this API, by default "{{ source }}".
    #   Note that most of MediaWiki installations have source URL at `/w/api.php`, but some are
    #   just `/api.php`, others use `/wiki/api.php` and so on.
    #
    # @param defaults [Hash] Default options for all API queries. Default param values also can be
    #   set by subsequent {Action} methods, like `api.some_action.json(callback: 'mycallbackname')...`
{% for param in object.main.params %}    # @option defaults [{{ param.ruby_type }}] {{ param.name }} {{ param.description }}{{param.param_docs}} See {{"{"}}Action#{{param.name}}}
{% endfor %}    #
    def initialize(url = '{{ source }}', **defaults)
      @client = Client.new(url, **defaults)
      @defaults = defaults
    end
{% for action in object.actions %}{% include 'action_method' %}{% endfor %}  end
end
