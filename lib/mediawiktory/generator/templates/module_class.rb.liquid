module {{ namespace }}::Modules
  # {{ object.description }}
  #
  # Usage:
  #
  # ```ruby
  # api.some_action.{{ object.name }}(**options).perform # returns string with raw output
  # # or
  # api.some_action.{{ object.name }}(**options).response # returns output parsed and wrapped into Mash-like object
  #
  # # or, with chainable interface:
  # api.some_action.{{ object.name }}.{{ object.params.first.name }}(value).perform
  # ```
  #
  # See {MediaWiktory::Action} for generic explanation of working with MediaWiki actions and their
  # submodules.
  #
  # All submodule's parameters are documented as its public methods, see below.
  #
  class {{ object.class_name }} < MediaWiktory::Submodule
{% for param in object.params %}{% include 'param_method' %}{% endfor %}
  end
end
