# {{ action.docs }}
#
# Usage:
#
# ```ruby
# api.{{ action.name }}(**options).perform # returns string with raw output
# # or
# api.{{ action.name }}(**options).json # returns output parsed and wrapped into Mash-like object
#
# # or, with chainable interface:
# api.{{ action.name }}.{{ action.params.first.name }}(value)....perform
# ```
#
# See \{MediaWiktory::Action\} for generic explanation of working with MediaWiki actions.
#
# All action's parameters are documented as its public methods, see below.
#
class {{ action.class_name }} < {{ action.method == :post ? 'Post' : 'Get' }}Action
  # @private
  def initialize(**params)
    super(**params)
  end

  {% for param in action.params %}
    {% include 'param_method.rb' %}
  {% endfor %}

  def perform
  end
end
